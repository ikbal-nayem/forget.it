{"version":3,"sources":["../node_modules/@material-ui/core/esm/Typography/Typography.js","../node_modules/@material-ui/core/esm/FormControlLabel/FormControlLabel.js","../node_modules/@material-ui/lab/esm/internal/svg-icons/SuccessOutlined.js","../node_modules/@material-ui/lab/esm/internal/svg-icons/ReportProblemOutlined.js","../node_modules/@material-ui/lab/esm/internal/svg-icons/ErrorOutline.js","../node_modules/@material-ui/lab/esm/internal/svg-icons/InfoOutlined.js","../node_modules/@material-ui/lab/esm/internal/svg-icons/Close.js","../node_modules/@material-ui/lab/esm/Alert/Alert.js","../node_modules/@material-ui/core/esm/internal/SwitchBase.js","../node_modules/@material-ui/core/esm/Switch/Switch.js"],"names":["defaultVariantMapping","h1","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","Typography","React","props","ref","_props$align","align","classes","className","_props$color","color","component","_props$display","display","_props$gutterBottom","gutterBottom","_props$noWrap","noWrap","_props$paragraph","paragraph","_props$variant","variant","_props$variantMapping","variantMapping","other","_objectWithoutProperties","Component","_extends","clsx","root","concat","capitalize","withStyles","theme","margin","typography","caption","button","overline","srOnly","position","height","width","overflow","alignLeft","textAlign","alignCenter","alignRight","alignJustify","textOverflow","whiteSpace","marginBottom","colorInherit","colorPrimary","palette","primary","main","colorSecondary","secondary","colorTextPrimary","text","colorTextSecondary","colorError","error","displayInline","displayBlock","name","FormControlLabel","checked","control","disabledProp","disabled","label","inputRef","_props$labelPlacement","labelPlacement","onChange","value","muiFormControl","useFormControl","controlProps","forEach","key","alignItems","cursor","verticalAlign","WebkitTapHighlightColor","marginLeft","marginRight","labelPlacementStart","flexDirection","labelPlacementTop","labelPlacementBottom","createSvgIcon","d","defaultIconMapping","success","SuccessOutlinedIcon","fontSize","warning","ReportProblemOutlinedIcon","ErrorOutlineIcon","info","InfoOutlinedIcon","_ref","CloseIcon","Alert","action","children","_props$closeText","closeText","icon","_props$iconMapping","iconMapping","onClose","_props$role","role","_props$severity","severity","Paper","square","elevation","message","IconButton","size","title","onClick","getColor","type","darken","lighten","getBackgroundColor","borderRadius","shape","backgroundColor","padding","standardSuccess","standardInfo","standardWarning","standardError","outlinedSuccess","border","outlinedInfo","outlinedWarning","outlinedError","filledSuccess","fontWeight","fontWeightMedium","filledInfo","filledWarning","filledError","opacity","paddingLeft","SwitchBase","autoFocus","checkedProp","checkedIcon","defaultChecked","id","inputProps","onBlur","onFocus","readOnly","required","tabIndex","_useControlled","useControlled","controlled","default","Boolean","state","_useControlled2","_slicedToArray","setCheckedState","hasLabelFor","undefined","event","input","newChecked","target","top","left","zIndex","Switch","_props$edge","edge","_props$size","thumb","edgeStart","edgeEnd","switchBase","track","boxSizing","flexShrink","colorAdjust","grey","transition","transitions","create","duration","shortest","transform","fade","hoverOpacity","common","black","white","sizeSmall","boxShadow","shadows"],"mappings":"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","file":"static/js/4.45453166.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      margin: 0\n    },\n\n    /* Styles applied to the root element if `variant=\"body2\"`. */\n    body2: theme.typography.body2,\n\n    /* Styles applied to the root element if `variant=\"body1\"`. */\n    body1: theme.typography.body1,\n\n    /* Styles applied to the root element if `variant=\"caption\"`. */\n    caption: theme.typography.caption,\n\n    /* Styles applied to the root element if `variant=\"button\"`. */\n    button: theme.typography.button,\n\n    /* Styles applied to the root element if `variant=\"h1\"`. */\n    h1: theme.typography.h1,\n\n    /* Styles applied to the root element if `variant=\"h2\"`. */\n    h2: theme.typography.h2,\n\n    /* Styles applied to the root element if `variant=\"h3\"`. */\n    h3: theme.typography.h3,\n\n    /* Styles applied to the root element if `variant=\"h4\"`. */\n    h4: theme.typography.h4,\n\n    /* Styles applied to the root element if `variant=\"h5\"`. */\n    h5: theme.typography.h5,\n\n    /* Styles applied to the root element if `variant=\"h6\"`. */\n    h6: theme.typography.h6,\n\n    /* Styles applied to the root element if `variant=\"subtitle1\"`. */\n    subtitle1: theme.typography.subtitle1,\n\n    /* Styles applied to the root element if `variant=\"subtitle2\"`. */\n    subtitle2: theme.typography.subtitle2,\n\n    /* Styles applied to the root element if `variant=\"overline\"`. */\n    overline: theme.typography.overline,\n\n    /* Styles applied to the root element if `variant=\"srOnly\"`. Only accessible to screen readers. */\n    srOnly: {\n      position: 'absolute',\n      height: 1,\n      width: 1,\n      overflow: 'hidden'\n    },\n\n    /* Styles applied to the root element if `align=\"left\"`. */\n    alignLeft: {\n      textAlign: 'left'\n    },\n\n    /* Styles applied to the root element if `align=\"center\"`. */\n    alignCenter: {\n      textAlign: 'center'\n    },\n\n    /* Styles applied to the root element if `align=\"right\"`. */\n    alignRight: {\n      textAlign: 'right'\n    },\n\n    /* Styles applied to the root element if `align=\"justify\"`. */\n    alignJustify: {\n      textAlign: 'justify'\n    },\n\n    /* Styles applied to the root element if `nowrap={true}`. */\n    noWrap: {\n      overflow: 'hidden',\n      textOverflow: 'ellipsis',\n      whiteSpace: 'nowrap'\n    },\n\n    /* Styles applied to the root element if `gutterBottom={true}`. */\n    gutterBottom: {\n      marginBottom: '0.35em'\n    },\n\n    /* Styles applied to the root element if `paragraph={true}`. */\n    paragraph: {\n      marginBottom: 16\n    },\n\n    /* Styles applied to the root element if `color=\"inherit\"`. */\n    colorInherit: {\n      color: 'inherit'\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      color: theme.palette.primary.main\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      color: theme.palette.secondary.main\n    },\n\n    /* Styles applied to the root element if `color=\"textPrimary\"`. */\n    colorTextPrimary: {\n      color: theme.palette.text.primary\n    },\n\n    /* Styles applied to the root element if `color=\"textSecondary\"`. */\n    colorTextSecondary: {\n      color: theme.palette.text.secondary\n    },\n\n    /* Styles applied to the root element if `color=\"error\"`. */\n    colorError: {\n      color: theme.palette.error.main\n    },\n\n    /* Styles applied to the root element if `display=\"inline\"`. */\n    displayInline: {\n      display: 'inline'\n    },\n\n    /* Styles applied to the root element if `display=\"block\"`. */\n    displayBlock: {\n      display: 'block'\n    }\n  };\n};\nvar defaultVariantMapping = {\n  h1: 'h1',\n  h2: 'h2',\n  h3: 'h3',\n  h4: 'h4',\n  h5: 'h5',\n  h6: 'h6',\n  subtitle1: 'h6',\n  subtitle2: 'h6',\n  body1: 'p',\n  body2: 'p'\n};\nvar Typography = /*#__PURE__*/React.forwardRef(function Typography(props, ref) {\n  var _props$align = props.align,\n      align = _props$align === void 0 ? 'inherit' : _props$align,\n      classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'initial' : _props$color,\n      component = props.component,\n      _props$display = props.display,\n      display = _props$display === void 0 ? 'initial' : _props$display,\n      _props$gutterBottom = props.gutterBottom,\n      gutterBottom = _props$gutterBottom === void 0 ? false : _props$gutterBottom,\n      _props$noWrap = props.noWrap,\n      noWrap = _props$noWrap === void 0 ? false : _props$noWrap,\n      _props$paragraph = props.paragraph,\n      paragraph = _props$paragraph === void 0 ? false : _props$paragraph,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'body1' : _props$variant,\n      _props$variantMapping = props.variantMapping,\n      variantMapping = _props$variantMapping === void 0 ? defaultVariantMapping : _props$variantMapping,\n      other = _objectWithoutProperties(props, [\"align\", \"classes\", \"className\", \"color\", \"component\", \"display\", \"gutterBottom\", \"noWrap\", \"paragraph\", \"variant\", \"variantMapping\"]);\n\n  var Component = component || (paragraph ? 'p' : variantMapping[variant] || defaultVariantMapping[variant]) || 'span';\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, variant !== 'inherit' && classes[variant], color !== 'initial' && classes[\"color\".concat(capitalize(color))], noWrap && classes.noWrap, gutterBottom && classes.gutterBottom, paragraph && classes.paragraph, align !== 'inherit' && classes[\"align\".concat(capitalize(align))], display !== 'initial' && classes[\"display\".concat(capitalize(display))]),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Typography.propTypes = {\n  /**\n   * Set the text-align on the component.\n   */\n  align: PropTypes.oneOf(['inherit', 'left', 'center', 'right', 'justify']),\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['initial', 'inherit', 'primary', 'secondary', 'textPrimary', 'textSecondary', 'error']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   * Overrides the behavior of the `variantMapping` prop.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Controls the display type\n   */\n  display: PropTypes.oneOf(['initial', 'block', 'inline']),\n\n  /**\n   * If `true`, the text will have a bottom margin.\n   */\n  gutterBottom: PropTypes.bool,\n\n  /**\n   * If `true`, the text will not wrap, but instead will truncate with a text overflow ellipsis.\n   *\n   * Note that text overflow can only happen with block or inline-block level elements\n   * (the element needs to have a width in order to overflow).\n   */\n  noWrap: PropTypes.bool,\n\n  /**\n   * If `true`, the text will have a bottom margin.\n   */\n  paragraph: PropTypes.bool,\n\n  /**\n   * Applies the theme typography styles.\n   */\n  variant: PropTypes.oneOf(['h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'subtitle1', 'subtitle2', 'body1', 'body2', 'caption', 'button', 'overline', 'srOnly', 'inherit']),\n\n  /**\n   * The component maps the variant prop to a range of different HTML element types.\n   * For instance, subtitle1 to `<h6>`.\n   * If you wish to change that mapping, you can provide your own.\n   * Alternatively, you can use the `component` prop.\n   */\n  variantMapping: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTypography'\n})(Typography);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport { useFormControl } from '../FormControl';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'inline-flex',\n      alignItems: 'center',\n      cursor: 'pointer',\n      // For correct alignment with the text.\n      verticalAlign: 'middle',\n      WebkitTapHighlightColor: 'transparent',\n      marginLeft: -11,\n      marginRight: 16,\n      // used for row presentation of radio/checkbox\n      '&$disabled': {\n        cursor: 'default'\n      }\n    },\n\n    /* Styles applied to the root element if `labelPlacement=\"start\"`. */\n    labelPlacementStart: {\n      flexDirection: 'row-reverse',\n      marginLeft: 16,\n      // used for row presentation of radio/checkbox\n      marginRight: -11\n    },\n\n    /* Styles applied to the root element if `labelPlacement=\"top\"`. */\n    labelPlacementTop: {\n      flexDirection: 'column-reverse',\n      marginLeft: 16\n    },\n\n    /* Styles applied to the root element if `labelPlacement=\"bottom\"`. */\n    labelPlacementBottom: {\n      flexDirection: 'column',\n      marginLeft: 16\n    },\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the label's Typography component. */\n    label: {\n      '&$disabled': {\n        color: theme.palette.text.disabled\n      }\n    }\n  };\n};\n/**\n * Drop in replacement of the `Radio`, `Switch` and `Checkbox` component.\n * Use this component if you want to display an extra label.\n */\n\nvar FormControlLabel = /*#__PURE__*/React.forwardRef(function FormControlLabel(props, ref) {\n  var checked = props.checked,\n      classes = props.classes,\n      className = props.className,\n      control = props.control,\n      disabledProp = props.disabled,\n      inputRef = props.inputRef,\n      label = props.label,\n      _props$labelPlacement = props.labelPlacement,\n      labelPlacement = _props$labelPlacement === void 0 ? 'end' : _props$labelPlacement,\n      name = props.name,\n      onChange = props.onChange,\n      value = props.value,\n      other = _objectWithoutProperties(props, [\"checked\", \"classes\", \"className\", \"control\", \"disabled\", \"inputRef\", \"label\", \"labelPlacement\", \"name\", \"onChange\", \"value\"]);\n\n  var muiFormControl = useFormControl();\n  var disabled = disabledProp;\n\n  if (typeof disabled === 'undefined' && typeof control.props.disabled !== 'undefined') {\n    disabled = control.props.disabled;\n  }\n\n  if (typeof disabled === 'undefined' && muiFormControl) {\n    disabled = muiFormControl.disabled;\n  }\n\n  var controlProps = {\n    disabled: disabled\n  };\n  ['checked', 'name', 'onChange', 'value', 'inputRef'].forEach(function (key) {\n    if (typeof control.props[key] === 'undefined' && typeof props[key] !== 'undefined') {\n      controlProps[key] = props[key];\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"label\", _extends({\n    className: clsx(classes.root, className, labelPlacement !== 'end' && classes[\"labelPlacement\".concat(capitalize(labelPlacement))], disabled && classes.disabled),\n    ref: ref\n  }, other), /*#__PURE__*/React.cloneElement(control, controlProps), /*#__PURE__*/React.createElement(Typography, {\n    component: \"span\",\n    className: clsx(classes.label, disabled && classes.disabled)\n  }, label));\n});\nprocess.env.NODE_ENV !== \"production\" ? FormControlLabel.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component appears selected.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * A control element. For instance, it can be be a `Radio`, a `Switch` or a `Checkbox`.\n   */\n  control: PropTypes.element.isRequired,\n\n  /**\n   * If `true`, the control will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * The text to be used in an enclosing label element.\n   */\n  label: PropTypes.node,\n\n  /**\n   * The position of the label.\n   */\n  labelPlacement: PropTypes.oneOf(['bottom', 'end', 'start', 'top']),\n\n  /**\n   * @ignore\n   */\n  name: PropTypes.string,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiFormControlLabel'\n})(FormControlLabel);","import * as React from 'react';\nimport { createSvgIcon } from '@material-ui/core/utils';\n/**\r\n * @ignore - internal component.\r\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M20,12A8,8 0 0,1 12,20A8,8 0 0,1 4,12A8,8 0 0,1 12,4C12.76,4 13.5,4.11 14.2, 4.31L15.77,2.74C14.61,2.26 13.34,2 12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0, 0 22,12M7.91,10.08L6.5,11.5L11,16L21,6L19.59,4.58L11,13.17L7.91,10.08Z\"\n}), 'SuccessOutlined');","import * as React from 'react';\nimport { createSvgIcon } from '@material-ui/core/utils';\n/**\r\n * @ignore - internal component.\r\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 5.99L19.53 19H4.47L12 5.99M12 2L1 21h22L12 2zm1 14h-2v2h2v-2zm0-6h-2v4h2v-4z\"\n}), 'ReportProblemOutlined');","import * as React from 'react';\nimport { createSvgIcon } from '@material-ui/core/utils';\n/**\r\n * @ignore - internal component.\r\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M11 15h2v2h-2zm0-8h2v6h-2zm.99-5C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"\n}), 'ErrorOutline');","import * as React from 'react';\nimport { createSvgIcon } from '@material-ui/core/utils';\n/**\r\n * @ignore - internal component.\r\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M11,9H13V7H11M12,20C7.59,20 4,16.41 4,12C4,7.59 7.59,4 12,4C16.41,4 20,7.59 20, 12C20,16.41 16.41,20 12,20M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10, 10 0 0,0 12,2M11,17H13V11H11V17Z\"\n}), 'InfoOutlined');","import * as React from 'react';\nimport { createSvgIcon } from '@material-ui/core/utils';\n/**\r\n * @ignore - internal component.\r\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Close');","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { withStyles, lighten, darken } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport SuccessOutlinedIcon from '../internal/svg-icons/SuccessOutlined';\nimport ReportProblemOutlinedIcon from '../internal/svg-icons/ReportProblemOutlined';\nimport ErrorOutlineIcon from '../internal/svg-icons/ErrorOutline';\nimport InfoOutlinedIcon from '../internal/svg-icons/InfoOutlined';\nimport CloseIcon from '../internal/svg-icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport { capitalize } from '@material-ui/core/utils';\nexport var styles = function styles(theme) {\n  var getColor = theme.palette.type === 'light' ? darken : lighten;\n  var getBackgroundColor = theme.palette.type === 'light' ? lighten : darken;\n  return {\n    /* Styles applied to the root element. */\n    root: _extends({}, theme.typography.body2, {\n      borderRadius: theme.shape.borderRadius,\n      backgroundColor: 'transparent',\n      display: 'flex',\n      padding: '6px 16px'\n    }),\n\n    /* Styles applied to the root element if `variant=\"standard\"` and `color=\"success\"`. */\n    standardSuccess: {\n      color: getColor(theme.palette.success.main, 0.6),\n      backgroundColor: getBackgroundColor(theme.palette.success.main, 0.9),\n      '& $icon': {\n        color: theme.palette.success.main\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"standard\"` and `color=\"info\"`. */\n    standardInfo: {\n      color: getColor(theme.palette.info.main, 0.6),\n      backgroundColor: getBackgroundColor(theme.palette.info.main, 0.9),\n      '& $icon': {\n        color: theme.palette.info.main\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"standard\"` and `color=\"warning\"`. */\n    standardWarning: {\n      color: getColor(theme.palette.warning.main, 0.6),\n      backgroundColor: getBackgroundColor(theme.palette.warning.main, 0.9),\n      '& $icon': {\n        color: theme.palette.warning.main\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"standard\"` and `color=\"error\"`. */\n    standardError: {\n      color: getColor(theme.palette.error.main, 0.6),\n      backgroundColor: getBackgroundColor(theme.palette.error.main, 0.9),\n      '& $icon': {\n        color: theme.palette.error.main\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"success\"`. */\n    outlinedSuccess: {\n      color: getColor(theme.palette.success.main, 0.6),\n      border: \"1px solid \".concat(theme.palette.success.main),\n      '& $icon': {\n        color: theme.palette.success.main\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"info\"`. */\n    outlinedInfo: {\n      color: getColor(theme.palette.info.main, 0.6),\n      border: \"1px solid \".concat(theme.palette.info.main),\n      '& $icon': {\n        color: theme.palette.info.main\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"warning\"`. */\n    outlinedWarning: {\n      color: getColor(theme.palette.warning.main, 0.6),\n      border: \"1px solid \".concat(theme.palette.warning.main),\n      '& $icon': {\n        color: theme.palette.warning.main\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"error\"`. */\n    outlinedError: {\n      color: getColor(theme.palette.error.main, 0.6),\n      border: \"1px solid \".concat(theme.palette.error.main),\n      '& $icon': {\n        color: theme.palette.error.main\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"filled\"` and `color=\"success\"`. */\n    filledSuccess: {\n      color: '#fff',\n      fontWeight: theme.typography.fontWeightMedium,\n      backgroundColor: theme.palette.success.main\n    },\n\n    /* Styles applied to the root element if `variant=\"filled\"` and `color=\"info\"`. */\n    filledInfo: {\n      color: '#fff',\n      fontWeight: theme.typography.fontWeightMedium,\n      backgroundColor: theme.palette.info.main\n    },\n\n    /* Styles applied to the root element if `variant=\"filled\"` and `color=\"warning\"`. */\n    filledWarning: {\n      color: '#fff',\n      fontWeight: theme.typography.fontWeightMedium,\n      backgroundColor: theme.palette.warning.main\n    },\n\n    /* Styles applied to the root element if `variant=\"filled\"` and `color=\"error\"`. */\n    filledError: {\n      color: '#fff',\n      fontWeight: theme.typography.fontWeightMedium,\n      backgroundColor: theme.palette.error.main\n    },\n\n    /* Styles applied to the icon wrapper element. */\n    icon: {\n      marginRight: 12,\n      padding: '7px 0',\n      display: 'flex',\n      fontSize: 22,\n      opacity: 0.9\n    },\n\n    /* Styles applied to the message wrapper element. */\n    message: {\n      padding: '8px 0'\n    },\n\n    /* Styles applied to the action wrapper element if `action` is provided. */\n    action: {\n      display: 'flex',\n      alignItems: 'center',\n      marginLeft: 'auto',\n      paddingLeft: 16,\n      marginRight: -8\n    }\n  };\n};\nvar defaultIconMapping = {\n  success: /*#__PURE__*/React.createElement(SuccessOutlinedIcon, {\n    fontSize: \"inherit\"\n  }),\n  warning: /*#__PURE__*/React.createElement(ReportProblemOutlinedIcon, {\n    fontSize: \"inherit\"\n  }),\n  error: /*#__PURE__*/React.createElement(ErrorOutlineIcon, {\n    fontSize: \"inherit\"\n  }),\n  info: /*#__PURE__*/React.createElement(InfoOutlinedIcon, {\n    fontSize: \"inherit\"\n  })\n};\n\nvar _ref = /*#__PURE__*/React.createElement(CloseIcon, {\n  fontSize: \"small\"\n});\n\nvar Alert = /*#__PURE__*/React.forwardRef(function Alert(props, ref) {\n  var action = props.action,\n      children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$closeText = props.closeText,\n      closeText = _props$closeText === void 0 ? 'Close' : _props$closeText,\n      color = props.color,\n      icon = props.icon,\n      _props$iconMapping = props.iconMapping,\n      iconMapping = _props$iconMapping === void 0 ? defaultIconMapping : _props$iconMapping,\n      onClose = props.onClose,\n      _props$role = props.role,\n      role = _props$role === void 0 ? 'alert' : _props$role,\n      _props$severity = props.severity,\n      severity = _props$severity === void 0 ? 'success' : _props$severity,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'standard' : _props$variant,\n      other = _objectWithoutProperties(props, [\"action\", \"children\", \"classes\", \"className\", \"closeText\", \"color\", \"icon\", \"iconMapping\", \"onClose\", \"role\", \"severity\", \"variant\"]);\n\n  return /*#__PURE__*/React.createElement(Paper, _extends({\n    role: role,\n    square: true,\n    elevation: 0,\n    className: clsx(classes.root, classes[\"\".concat(variant).concat(capitalize(color || severity))], className),\n    ref: ref\n  }, other), icon !== false ? /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.icon\n  }, icon || iconMapping[severity] || defaultIconMapping[severity]) : null, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.message\n  }, children), action != null ? /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.action\n  }, action) : null, action == null && onClose ? /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.action\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    size: \"small\",\n    \"aria-label\": closeText,\n    title: closeText,\n    color: \"inherit\",\n    onClick: onClose\n  }, _ref)) : null);\n});\nprocess.env.NODE_ENV !== \"production\" ? Alert.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\r\n   * The action to display. It renders after the message, at the end of the alert.\r\n   */\n  action: PropTypes.node,\n\n  /**\r\n   * The content of the component.\r\n   */\n  children: PropTypes.node,\n\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   * See [CSS API](#css) below for more details.\r\n   */\n  classes: PropTypes.object,\n\n  /**\r\n   * @ignore\r\n   */\n  className: PropTypes.string,\n\n  /**\r\n   * Override the default label for the *close popup* icon button.\r\n   *\r\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\r\n   */\n  closeText: PropTypes.string,\n\n  /**\r\n   * The main color for the alert. Unless provided, the value is taken from the `severity` prop.\r\n   */\n  color: PropTypes.oneOf(['error', 'info', 'success', 'warning']),\n\n  /**\r\n   * Override the icon displayed before the children.\r\n   * Unless provided, the icon is mapped to the value of the `severity` prop.\r\n   */\n  icon: PropTypes.node,\n\n  /**\r\n   * The component maps the `severity` prop to a range of different icons,\r\n   * for instance success to `<SuccessOutlined>`.\r\n   * If you wish to change this mapping, you can provide your own.\r\n   * Alternatively, you can use the `icon` prop to override the icon displayed.\r\n   */\n  iconMapping: PropTypes.shape({\n    error: PropTypes.node,\n    info: PropTypes.node,\n    success: PropTypes.node,\n    warning: PropTypes.node\n  }),\n\n  /**\r\n   * Callback fired when the component requests to be closed.\r\n   * When provided and no `action` prop is set, a close icon button is displayed that triggers the callback when clicked.\r\n   *\r\n   * @param {object} event The event source of the callback.\r\n   */\n  onClose: PropTypes.func,\n\n  /**\r\n   * The ARIA role attribute of the element.\r\n   */\n  role: PropTypes.string,\n\n  /**\r\n   * The severity of the alert. This defines the color and icon used.\r\n   */\n  severity: PropTypes.oneOf(['error', 'info', 'success', 'warning']),\n\n  /**\r\n   * The variant to use.\r\n   */\n  variant: PropTypes.oneOf(['filled', 'outlined', 'standard'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiAlert'\n})(Alert);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport useControlled from '../utils/useControlled';\nimport useFormControl from '../FormControl/useFormControl';\nimport withStyles from '../styles/withStyles';\nimport IconButton from '../IconButton';\nexport var styles = {\n  root: {\n    padding: 9\n  },\n  checked: {},\n  disabled: {},\n  input: {\n    cursor: 'inherit',\n    position: 'absolute',\n    opacity: 0,\n    width: '100%',\n    height: '100%',\n    top: 0,\n    left: 0,\n    margin: 0,\n    padding: 0,\n    zIndex: 1\n  }\n};\n/**\n * @ignore - internal component.\n */\n\nvar SwitchBase = /*#__PURE__*/React.forwardRef(function SwitchBase(props, ref) {\n  var autoFocus = props.autoFocus,\n      checkedProp = props.checked,\n      checkedIcon = props.checkedIcon,\n      classes = props.classes,\n      className = props.className,\n      defaultChecked = props.defaultChecked,\n      disabledProp = props.disabled,\n      icon = props.icon,\n      id = props.id,\n      inputProps = props.inputProps,\n      inputRef = props.inputRef,\n      name = props.name,\n      onBlur = props.onBlur,\n      onChange = props.onChange,\n      onFocus = props.onFocus,\n      readOnly = props.readOnly,\n      required = props.required,\n      tabIndex = props.tabIndex,\n      type = props.type,\n      value = props.value,\n      other = _objectWithoutProperties(props, [\"autoFocus\", \"checked\", \"checkedIcon\", \"classes\", \"className\", \"defaultChecked\", \"disabled\", \"icon\", \"id\", \"inputProps\", \"inputRef\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"readOnly\", \"required\", \"tabIndex\", \"type\", \"value\"]);\n\n  var _useControlled = useControlled({\n    controlled: checkedProp,\n    default: Boolean(defaultChecked),\n    name: 'SwitchBase',\n    state: 'checked'\n  }),\n      _useControlled2 = _slicedToArray(_useControlled, 2),\n      checked = _useControlled2[0],\n      setCheckedState = _useControlled2[1];\n\n  var muiFormControl = useFormControl();\n\n  var handleFocus = function handleFocus(event) {\n    if (onFocus) {\n      onFocus(event);\n    }\n\n    if (muiFormControl && muiFormControl.onFocus) {\n      muiFormControl.onFocus(event);\n    }\n  };\n\n  var handleBlur = function handleBlur(event) {\n    if (onBlur) {\n      onBlur(event);\n    }\n\n    if (muiFormControl && muiFormControl.onBlur) {\n      muiFormControl.onBlur(event);\n    }\n  };\n\n  var handleInputChange = function handleInputChange(event) {\n    var newChecked = event.target.checked;\n    setCheckedState(newChecked);\n\n    if (onChange) {\n      // TODO v5: remove the second argument.\n      onChange(event, newChecked);\n    }\n  };\n\n  var disabled = disabledProp;\n\n  if (muiFormControl) {\n    if (typeof disabled === 'undefined') {\n      disabled = muiFormControl.disabled;\n    }\n  }\n\n  var hasLabelFor = type === 'checkbox' || type === 'radio';\n  return /*#__PURE__*/React.createElement(IconButton, _extends({\n    component: \"span\",\n    className: clsx(classes.root, className, checked && classes.checked, disabled && classes.disabled),\n    disabled: disabled,\n    tabIndex: null,\n    role: undefined,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(\"input\", _extends({\n    autoFocus: autoFocus,\n    checked: checkedProp,\n    defaultChecked: defaultChecked,\n    className: classes.input,\n    disabled: disabled,\n    id: hasLabelFor && id,\n    name: name,\n    onChange: handleInputChange,\n    readOnly: readOnly,\n    ref: inputRef,\n    required: required,\n    tabIndex: tabIndex,\n    type: type,\n    value: value\n  }, inputProps)), checked ? checkedIcon : icon);\n}); // NB: If changed, please update Checkbox, Switch and Radio\n// so that the API documentation is updated.\n\nprocess.env.NODE_ENV !== \"production\" ? SwitchBase.propTypes = {\n  /**\n   * If `true`, the `input` element will be focused during the first mount.\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the switch will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node.isRequired,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /*\n   * @ignore\n   */\n  name: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * It prevents the user from changing the value of the field\n   * (not from interacting with the field).\n   */\n  readOnly: PropTypes.bool,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * The input component prop `type`.\n   */\n  type: PropTypes.string.isRequired,\n\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'PrivateSwitchBase'\n})(SwitchBase);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\n// @inheritedComponent IconButton\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport withStyles from '../styles/withStyles';\nimport { fade } from '../styles/colorManipulator';\nimport capitalize from '../utils/capitalize';\nimport SwitchBase from '../internal/SwitchBase';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'inline-flex',\n      width: 34 + 12 * 2,\n      height: 14 + 12 * 2,\n      overflow: 'hidden',\n      padding: 12,\n      boxSizing: 'border-box',\n      position: 'relative',\n      flexShrink: 0,\n      zIndex: 0,\n      // Reset the stacking context.\n      verticalAlign: 'middle',\n      // For correct alignment with the text.\n      '@media print': {\n        colorAdjust: 'exact'\n      }\n    },\n\n    /* Styles applied to the root element if `edge=\"start\"`. */\n    edgeStart: {\n      marginLeft: -8\n    },\n\n    /* Styles applied to the root element if `edge=\"end\"`. */\n    edgeEnd: {\n      marginRight: -8\n    },\n\n    /* Styles applied to the internal `SwitchBase` component's `root` class. */\n    switchBase: {\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      zIndex: 1,\n      // Render above the focus ripple.\n      color: theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[400],\n      transition: theme.transitions.create(['left', 'transform'], {\n        duration: theme.transitions.duration.shortest\n      }),\n      '&$checked': {\n        transform: 'translateX(20px)'\n      },\n      '&$disabled': {\n        color: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[800]\n      },\n      '&$checked + $track': {\n        opacity: 0.5\n      },\n      '&$disabled + $track': {\n        opacity: theme.palette.type === 'light' ? 0.12 : 0.1\n      }\n    },\n\n    /* Styles applied to the internal SwitchBase component's root element if `color=\"primary\"`. */\n    colorPrimary: {\n      '&$checked': {\n        color: theme.palette.primary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[800]\n      },\n      '&$checked + $track': {\n        backgroundColor: theme.palette.primary.main\n      },\n      '&$disabled + $track': {\n        backgroundColor: theme.palette.type === 'light' ? theme.palette.common.black : theme.palette.common.white\n      }\n    },\n\n    /* Styles applied to the internal SwitchBase component's root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      '&$checked': {\n        color: theme.palette.secondary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[800]\n      },\n      '&$checked + $track': {\n        backgroundColor: theme.palette.secondary.main\n      },\n      '&$disabled + $track': {\n        backgroundColor: theme.palette.type === 'light' ? theme.palette.common.black : theme.palette.common.white\n      }\n    },\n\n    /* Styles applied to the root element if `size=\"small\"`. */\n    sizeSmall: {\n      width: 40,\n      height: 24,\n      padding: 7,\n      '& $thumb': {\n        width: 16,\n        height: 16\n      },\n      '& $switchBase': {\n        padding: 4,\n        '&$checked': {\n          transform: 'translateX(16px)'\n        }\n      }\n    },\n\n    /* Pseudo-class applied to the internal `SwitchBase` component's `checked` class. */\n    checked: {},\n\n    /* Pseudo-class applied to the internal SwitchBase component's disabled class. */\n    disabled: {},\n\n    /* Styles applied to the internal SwitchBase component's input element. */\n    input: {\n      left: '-100%',\n      width: '300%'\n    },\n\n    /* Styles used to create the thumb passed to the internal `SwitchBase` component `icon` prop. */\n    thumb: {\n      boxShadow: theme.shadows[1],\n      backgroundColor: 'currentColor',\n      width: 20,\n      height: 20,\n      borderRadius: '50%'\n    },\n\n    /* Styles applied to the track element. */\n    track: {\n      height: '100%',\n      width: '100%',\n      borderRadius: 14 / 2,\n      zIndex: -1,\n      transition: theme.transitions.create(['opacity', 'background-color'], {\n        duration: theme.transitions.duration.shortest\n      }),\n      backgroundColor: theme.palette.type === 'light' ? theme.palette.common.black : theme.palette.common.white,\n      opacity: theme.palette.type === 'light' ? 0.38 : 0.3\n    }\n  };\n};\nvar Switch = /*#__PURE__*/React.forwardRef(function Switch(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'secondary' : _props$color,\n      _props$edge = props.edge,\n      edge = _props$edge === void 0 ? false : _props$edge,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"color\", \"edge\", \"size\"]);\n\n  var icon = /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.thumb\n  });\n  return /*#__PURE__*/React.createElement(\"span\", {\n    className: clsx(classes.root, className, {\n      'start': classes.edgeStart,\n      'end': classes.edgeEnd\n    }[edge], size === \"small\" && classes[\"size\".concat(capitalize(size))])\n  }, /*#__PURE__*/React.createElement(SwitchBase, _extends({\n    type: \"checkbox\",\n    icon: icon,\n    checkedIcon: icon,\n    classes: {\n      root: clsx(classes.switchBase, classes[\"color\".concat(capitalize(color))]),\n      input: classes.input,\n      checked: classes.checked,\n      disabled: classes.disabled\n    },\n    ref: ref\n  }, other)), /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.track\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Switch.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'primary', 'secondary']),\n\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the switch will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * If given, uses a negative margin to counteract the padding on one\n   * side (this is often helpful for aligning the left or right\n   * side of the icon with content above or below, without ruining the border\n   * size and shape).\n   */\n  edge: PropTypes.oneOf(['end', 'start', false]),\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the switch.\n   * `small` is equivalent to the dense switch styling.\n   */\n  size: PropTypes.oneOf(['medium', 'small']),\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiSwitch'\n})(Switch);"],"sourceRoot":""}